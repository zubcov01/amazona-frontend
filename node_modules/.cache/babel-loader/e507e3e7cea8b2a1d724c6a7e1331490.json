{"ast":null,"code":"import Axios from 'axios';\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from '../constants/userConstants';\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["D:/VS Code/React/Less/amazona/frontend/src/actions/userActions.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","register","name","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,gBAJF,EAKEC,mBALF,EAMEC,mBANF,EAOEC,YAPF,QAQO,4BARP;AAUA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AACrEA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEX,qBADC;AAEPY,IAAAA,OAAO,EAAE;AACPJ,MAAAA,KADO;AAEPC,MAAAA;AAFO;AAFF,GAAD,CAAR;;AAOA,MAAI;AACF,UAAM;AACJI,MAAAA;AADI,QAEF,MAAMf,KAAK,CAACgB,IAAN,CAAW,qBAAX,EAAkC;AAC1CP,MAAAA,IAD0C;AAE1CC,MAAAA,KAF0C;AAG1CC,MAAAA;AAH0C,KAAlC,CAFV;AAOAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,qBADC;AAEPW,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAIAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,mBADC;AAEPQ,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAKAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACD,GAlBD,CAkBE,OAAOM,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,kBADC;AAEPa,MAAAA,OAAO,EAAEO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACPF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADb,GAEPF,KAAK,CAACE;AAJD,KAAD,CAAR;AAMD;AACF,CAlCM;AAmCP,OAAO,MAAMC,MAAM,GAAG,CAACd,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER,mBADC;AAEPS,IAAAA,OAAO,EAAE;AACPJ,MAAAA,KADO;AAEPC,MAAAA;AAFO;AAFF,GAAD,CAAR;;AAOA,MAAI;AACF,UAAM;AACJI,MAAAA;AADI,QAEF,MAAMf,KAAK,CAACgB,IAAN,CAAW,mBAAX,EAAgC;AACxCN,MAAAA,KADwC;AAExCC,MAAAA;AAFwC,KAAhC,CAFV;AAMAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP,mBADC;AAEPQ,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAIAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACD,GAZD,CAYE,OAAOM,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,gBADC;AAEPU,MAAAA,OAAO,EAAEO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACPF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADb,GAEPF,KAAK,CAACE;AAJD,KAAD,CAAR;AAMD;AACF,CA5BM;AA8BP,OAAO,MAAME,OAAO,GAAG,MAAOb,QAAD,IAAc;AACzCK,EAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAT,EAAAA,YAAY,CAACS,UAAb,CAAwB,WAAxB;AACAd,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEN;AADC,GAAD,CAAR;AAGD,CANM","sourcesContent":["import Axios from 'axios';\r\nimport {\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SIGNIN_FAIL,\r\n  USER_SIGNIN_REQUEST,\r\n  USER_SIGNIN_SUCCESS,\r\n  USER_SIGNOUT,\r\n} from '../constants/userConstants';\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  dispatch({\r\n    type: USER_REGISTER_REQUEST,\r\n    payload: {\r\n      email,\r\n      password\r\n    }\r\n  });\r\n  try {\r\n    const {\r\n      data\r\n    } = await Axios.post('/api/users/register', {\r\n      name,\r\n      email,\r\n      password\r\n    });\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data\r\n    });\r\n    dispatch({\r\n      type: USER_SIGNIN_SUCCESS,\r\n      payload: data\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.message ?\r\n        error.response.data.message :\r\n        error.message,\r\n    });\r\n  }\r\n};\r\nexport const signin = (email, password) => async (dispatch) => {\r\n  dispatch({\r\n    type: USER_SIGNIN_REQUEST,\r\n    payload: {\r\n      email,\r\n      password\r\n    }\r\n  });\r\n  try {\r\n    const {\r\n      data\r\n    } = await Axios.post('/api/users/signin', {\r\n      email,\r\n      password\r\n    });\r\n    dispatch({\r\n      type: USER_SIGNIN_SUCCESS,\r\n      payload: data\r\n    });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SIGNIN_FAIL,\r\n      payload: error.response && error.response.data.message ?\r\n        error.response.data.message :\r\n        error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  localStorage.removeItem('cartItems');\r\n  dispatch({\r\n    type: USER_SIGNOUT\r\n  })\r\n};"]},"metadata":{},"sourceType":"module"}