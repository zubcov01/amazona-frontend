{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n  },\n  paymentMethod: 'PayPal'\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["D:/VS Code/React/Less/amazona/frontend/src/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","cartReducer","productDetailsReducer","productListReducer","userRegisterReducer","userSigninReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SACEA,eADF,EAEEC,eAFF,EAGEC,OAHF,EAIEC,WAJF,QAKO,OALP;AAMA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SACEC,WADF,QAEO,yBAFP;AAGA,SACEC,qBADF,EAEEC,kBAFF,QAGO,4BAHP;AAIA,SACEC,mBADF,EAEEC,iBAFF,QAGO,yBAHP;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF;AADlF,GADO;AAInBG,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADS,GAET,EAHE;AAIFK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG;AAJ/G,GAJa;AASfM,EAAAA,aAAa,EAAE;AATA,CAArB;AAWA,MAAMC,OAAO,GAAGpB,eAAe,CAAC;AAC9BqB,EAAAA,WAAW,EAAEf,kBADiB;AAE9BgB,EAAAA,cAAc,EAAEjB,qBAFc;AAG9BW,EAAAA,IAAI,EAAEZ,WAHwB;AAI9BM,EAAAA,UAAU,EAAEF,iBAJkB;AAK9Be,EAAAA,YAAY,EAAEhB;AALgB,CAAD,CAA/B;AAOA,MAAMiB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CzB,OAAvE;AACA,MAAM0B,KAAK,GAAGzB,WAAW,CAACkB,OAAD,EAAUX,YAAV,EAAwBe,eAAe,CAACzB,eAAe,CAACI,KAAD,CAAhB,CAAvC,CAAzB;AACA,eAAewB,KAAf","sourcesContent":["import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  compose,\r\n  createStore\r\n} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport {\r\n  cartReducer\r\n} from './reducers/cartReducers';\r\nimport {\r\n  productDetailsReducer,\r\n  productListReducer\r\n} from './reducers/productReducers';\r\nimport {\r\n  userRegisterReducer,\r\n  userSigninReducer\r\n} from './reducers/userReducers';\r\nconst initialState = {\r\n  userSignin: {\r\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n  },\r\n  cart: {\r\n    cartItems: localStorage.getItem('cartItems') ?\r\n      JSON.parse(localStorage.getItem('cartItems')) :\r\n      [],\r\n      shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}, },\r\n      paymentMethod: 'PayPal'\r\n};\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userSignin: userSigninReducer,\r\n  userRegister: userRegisterReducer,\r\n})\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)))\r\nexport default store;"]},"metadata":{},"sourceType":"module"}