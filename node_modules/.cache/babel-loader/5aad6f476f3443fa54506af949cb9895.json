{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Code\\\\React\\\\Less\\\\amazona\\\\frontend\\\\src\\\\screens\\\\ShippingAddressScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShippingAddressScreen = props => {\n  _s();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.fullName);\n  const [city, setCity] = useState(shippingAddress.fullName);\n  const [postalCode, setPostalCode] = useState('');\n  const [country, setCountry] = useState('');\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      fullName,\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    props.history.push('/payment'); //TODO : dispatch save shipping address action\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Shipping Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fullName\",\n          placeholder: \"Enter Full Name\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"address\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"address\",\n          placeholder: \"Enter your Address\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          placeholder: \"Enter your City\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postalCode\",\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"postalCode\",\n          placeholder: \"Enter your Postal Code\",\n          value: postalCode,\n          onChange: e => setPostalCode(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"country\",\n          placeholder: \"Enter your Country\",\n          value: country,\n          onChange: e => setCountry(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary\",\n          type: \"submit\",\n          children: \"Countinue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShippingAddressScreen, \"HLTdv9F/+xjppWOjnpH7WbAKBVY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ShippingAddressScreen;\nexport default ShippingAddressScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingAddressScreen\");","map":{"version":3,"sources":["D:/VS Code/React/Less/amazona/frontend/src/screens/ShippingAddressScreen.jsx"],"names":["React","useState","CheckoutSteps","useDispatch","useSelector","saveShippingAddress","ShippingAddressScreen","props","userSignin","state","userInfo","cart","shippingAddress","history","push","fullName","setFullName","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nconst ShippingAddressScreen = (props) => {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {userInfo} = userSignin;\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart;\r\n    if(!userInfo){\r\n        props.history.push('/signin')\r\n    }\r\n    const [fullName, setFullName] = useState(shippingAddress.fullName)\r\n    const [address, setAddress] = useState(shippingAddress.fullName)\r\n    const [city, setCity] = useState(shippingAddress.fullName)\r\n    const [postalCode, setPostalCode] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const dispatch = useDispatch()\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({fullName, address, city, postalCode, country}));\r\n        props.history.push('/payment')\r\n        //TODO : dispatch save shipping address action\r\n    } \r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n            <form className = 'form' onSubmit = {submitHandler}>\r\n                <div>\r\n                    <h1>Shipping Address</h1>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor  = 'fullName'>Full Name</label>\r\n                    <input type=\"text\" id = 'fullName' placeholder = 'Enter Full Name' value = {fullName} onChange = {(e) => setFullName(e.target.value)} required/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor  = 'address'>Address</label>\r\n                    <input type=\"text\" id = 'address' placeholder = 'Enter your Address' value = {address} onChange = {(e) => setAddress(e.target.value)} required/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor  = 'city'>City</label>\r\n                    <input type=\"text\" id = 'city' placeholder = 'Enter your City' value = {city} onChange = {(e) => setCity(e.target.value)} required/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor  = 'postalCode'>Postal Code</label>\r\n                    <input type=\"text\" id = 'postalCode' placeholder = 'Enter your Postal Code' value = {postalCode} onChange = {(e) => setPostalCode(e.target.value)} required/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor  = 'country'>Country</label>\r\n                    <input type=\"text\" id = 'country' placeholder = 'Enter your Country' value = {country} onChange = {(e) => setCountry(e.target.value)} required/>\r\n                </div>\r\n                <div>\r\n                   <label/>\r\n                   <button className = 'primary' type = 'submit'>Countinue</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShippingAddressScreen;"]},"metadata":{},"sourceType":"module"}