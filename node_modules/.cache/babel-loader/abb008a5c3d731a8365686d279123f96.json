{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants/cartContants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/VS Code/React/Less/amazona/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map"],"mappings":"AAAA,SACIA,aADJ,QAEO,2BAFP;AAIA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAChCC,EAAAA,SAAS,EAAE;AADqB,CAAT,EAExBC,MAFwB,KAEb;AACV,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,aAAL;AACI,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACX,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAAlE;AAFR,SAAP;AAIH,OALD,MAKM;AACF,eAAO,EAAC,GAAGR,KAAJ;AAAWC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAtB,SAAP;AACH;;AACD;AACI,aAAOJ,KAAP;AAbZ;AAeH,CAlBM","sourcesContent":["import {\r\n    CART_ADD_ITEM\r\n} from \"../constants/cartContants\";\r\n\r\nexport const cartReducer = (state = {\r\n    cartItems: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find(x => x.product === item.product);\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            } else{\r\n                return {...state, cartItems: [...state.cartItems, item]};\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}