{"ast":null,"code":"import _slicedToArray from\"D:/VS Code/React/Less/amazona/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{detailsUser,updateUserProfile}from\"../actions/userActions\";import LoadingBox from\"../components/LoadingBox\";import MessageBox from\"../components/MessageBox\";import{USER_UPDATE_PROFILE_RESET}from\"../constants/userConstants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ProfileScreen=function ProfileScreen(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var userSignin=useSelector(function(state){return state.userSignin;});var userInfo=userSignin.userInfo;var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userUpdateProfile=useSelector(function(state){return state.userUpdateProfile;});var successUpdate=userUpdateProfile.success,errorUpdate=userUpdateProfile.error,loadingUpdate=userUpdateProfile.loading;var dispatch=useDispatch();useEffect(function(){dispatch({type:USER_UPDATE_PROFILE_RESET});if(!user){dispatch(detailsUser(userInfo._id));}else{setName(user.name);setEmail(user.email);}},[dispatch,userInfo._id,user]);var submitHandler=function submitHandler(e){e.preventDefault();// dispatch update profile\nif(password!==confirmPassword){alert(\"Password and Confirm Password are not matched\");}else{dispatch(updateUserProfile({userId:user._id,name:name,email:email,password:password}));}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"User Profile\"})}),loading?/*#__PURE__*/_jsx(LoadingBox,{}):error?/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[loadingUpdate&&/*#__PURE__*/_jsx(LoadingBox,{}),errorUpdate&&/*#__PURE__*/_jsx(MessageBox,{variant:\"danger\",children:errorUpdate}),successUpdate&&/*#__PURE__*/_jsx(MessageBox,{variant:\"success\",children:\"Profile Update Successfully\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",placeholder:\"Enter Name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",placeholder:\"Enter Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",placeholder:\"Enter Password\",onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",placeholder:\"Confirm Password\",onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{}),/*#__PURE__*/_jsx(\"button\",{className:\"primary\",type:\"submit\",children:\"Update\"})]})]})]})});};export default ProfileScreen;","map":{"version":3,"sources":["D:/VS Code/React/Less/amazona/frontend/src/screens/ProfileScreen.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","successUpdate","success","errorUpdate","loadingUpdate","dispatch","type","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailsUser, updateUserProfile } from \"../actions/userActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const {\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n  } = userUpdateProfile;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n    if (!user) {\r\n      dispatch(detailsUser(userInfo._id));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n    }\r\n  }, [dispatch, userInfo._id, user]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // dispatch update profile\r\n    if (password !== confirmPassword) {\r\n      alert(\"Password and Confirm Password are not matched\");\r\n    } else {\r\n      dispatch(updateUserProfile({ userId: user._id, name, email, password }));\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>User Profile</h1>\r\n        </div>\r\n        {loading ? (\r\n          <LoadingBox></LoadingBox>\r\n        ) : error ? (\r\n          <MessageBox variant=\"danger\">{error}</MessageBox>\r\n        ) : (\r\n          <>\r\n          {loadingUpdate && <LoadingBox></LoadingBox>   }\r\n          {errorUpdate && <MessageBox variant = 'danger'>{errorUpdate}</MessageBox>}\r\n          {successUpdate && <MessageBox variant = 'success'>Profile Update Successfully</MessageBox>}\r\n            <div>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                placeholder=\"Confirm Password\"\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label />\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"]},"metadata":{},"sourceType":"module"}